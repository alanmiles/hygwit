require 'spec_helper'

describe "BusinessSetups" do
  subject { page }
  
  describe "when not logged in" do
    
    before do
      #@absence_type = FactoryGirl.create(:absence_type, checked: true)
      @business = FactoryGirl.create(:business, created_by: 1)
    end
    
    describe "create a new business" do
      before { visit new_business_path }
      it "should render the signin page" do
        page.should have_selector('.alert', text: 'Please sign in')
        page.should have_selector('h1', text: 'Sign in') 
      end
    end
  end
  
  describe "when logged in" do
  
    let(:user) { FactoryGirl.create(:user) }
    
    before do
      @country = FactoryGirl.create(:country, complete: true)
      @country_absence = FactoryGirl.create(:country_absence, country_id: @country.id, checked: true)
      @leaving_reason = FactoryGirl.create(:leaving_reason, checked: true)
      @disciplinary_category = FactoryGirl.create(:disciplinary_category, checked: true)
      @grievance_type = FactoryGirl.create(:grievance_type, checked: true)
      @contract = FactoryGirl.create(:contract, checked: true)
      @rank = FactoryGirl.create(:rank, checked: true)
      @joiner_action = FactoryGirl.create(:joiner_action, checked: true)
      @leaver_action = FactoryGirl.create(:leaver_action, checked: true)
      @pay_category = FactoryGirl.create(:pay_category, checked: true)
      @pay_item = FactoryGirl.create(:pay_item, pay_category_id: @pay_category.id, checked: true)
      @loan_type = FactoryGirl.create(:loan_type, checked: true)
      @advance_type = FactoryGirl.create(:advance_type, checked: true)
      @quality = FactoryGirl.create(:quality, checked: true)
      @descriptors_count = QualityDescriptor.count
      @incomplete_country = @country.dup
      @incomplete_country.country = "Country_2"
      @incomplete_country.complete = false
      @incomplete_country.save
      @sector = FactoryGirl.create(:sector, checked: true)
      @unchecked_sector = @sector.dup
      @unchecked_sector.sector = "Sector 2"
      @unchecked_sector.checked = false
      @unchecked_sector.save
      @business = FactoryGirl.create(:business, country_id: @country.id, sector_id: @sector.id, created_by: user.id)  
      sign_in user   
    end
    
    describe "create a new business" do
      before { visit new_business_path }
      
      describe "viewing the new business page" do
        it { should have_selector('h1', text: "Set Up A New Business") }
        it { should have_selector('title', text: "New Business") }
        it { should have_selector('option', text: @country.country) }
        it { should_not have_selector('option', text: @incomplete_country.country) }
        it { should have_selector('option', text: @sector.sector) }
        it { should_not have_selector('option', text: @unchecked_sector.sector) }
        it { should have_selector('input#business_name') }
        it { should have_selector('input#business_address_1') }  
        it { should have_selector('input#business_address_2') }
        it { should have_selector('input#business_city') } 
        it { should have_selector('input#business_created_by', value: user.id.to_s) }
        it { should have_link('Cancel', href: user_path(user)) } 
      end
    
      describe "add invalid data" do
      
        before { fill_in :name, with: " " }
        
        it "should not create a business" do
          expect { click_button "Create" }.not_to change(Business, :count)
          page.should have_selector('h1', text: 'Set Up A New Business')
          page.should have_content('error')
        end
        
      end
      
      describe "add valid data" do
      
        before do
          @business_count = Business.count
          @bus_admin_count = BusinessAdmin.count
          fill_in "business_name", with: "Foo Ltd"
          fill_in :created_by, with: 1
          select "Qatar", from: "business[country_id]"
          select @sector.sector, from: "business[sector_id]"
          click_button "Create"
        end
        
        it "should create a new business + records in associated tables" do
          @business = Business.find_by_name("Foo Ltd")
          @new_business_count = Business.count
          @new_business_count.should == @business_count + 1
          @new_bus_admin_count = BusinessAdmin.count
          @new_bus_admin_count.should == @bus_admin_count + 1
          @absences_count = @business.absence_cats.count
          @absences_count.should >= 1
          @leaving_cats_count = @business.leaving_cats.count
          @leaving_cats_count.should >= 1
          @disc_cats_count = @business.disciplinary_cats.count
          @disc_cats_count.should >= 1
          @grievance_cats_count = @business.grievance_cats.count
          @grievance_cats_count.should >= 1
          @contract_cats_count = @business.contract_cats.count
          @contract_cats_count.should >= 1
          @rank_cats_count = @business.rank_cats.count
          @rank_cats_count.should >= 1
          @join_activities_count = @business.joiner_activities.count
          @join_activities_count.should >= 1
          @leave_activities_count = @business.leaver_activities.count
          @leave_activities_count.should >= 1
          @payroll_cats_count = @business.payroll_cats.count
          @payroll_cats_count.should >= 1
          @payroll_items_count = @business.payroll_items.count
          @payroll_items_count.should >= 1
          @loan_cats_count = @business.loan_cats.count
          @loan_cats_count.should >= 1
          @advance_cats_count = @business.advance_cats.count
          @advance_cats_count.should >= 1
          @personal_qualities_count = @business.personal_qualities.count
          @personal_qualities_count.should >= 1
          @new_descriptors_count = QualityDescriptor.count
          @added_descriptors = @new_descriptors_count - @descriptors_count
          @added_descriptors.should == 5
          
          page.should have_selector('h1', text: 'Your Business Settings')
        end
        
      end
    end
  end
end
